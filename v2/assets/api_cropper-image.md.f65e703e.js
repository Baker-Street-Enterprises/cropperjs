import{_ as i,H as n,o as c,c as p,J as l,E as o,V as r,C as e,a}from"./chunks/framework.e7a370da.js";const k=JSON.parse('{"title":"CropperImage","description":"","frontmatter":{},"headers":[],"relativePath":"api/cropper-image.md","filePath":"api/cropper-image.md","lastUpdated":1686469647000}'),d={name:"api/cropper-image.md"},h=r('<h1 id="cropperimage" tabindex="-1">CropperImage <a class="header-anchor" href="#cropperimage" aria-label="Permalink to &quot;CropperImage&quot;">​</a></h1><p>The <code>CropperImage</code> interface provides properties and methods for manipulating the layout and presentation of <code>&lt;cropper-image&gt;</code> elements.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="basic" tabindex="-1">Basic <a class="header-anchor" href="#basic" aria-label="Permalink to &quot;Basic&quot;">​</a></h3>',4),u=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),m=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,[a("The default width and height of this element is "),e("code",null,"0"),a(".")])],-1),g=e("h3",{id:"with-image-source",tabindex:"-1"},[a("With image source "),e("a",{class:"header-anchor",href:"#with-image-source","aria-label":'Permalink to "With image source"'},"​")],-1),y=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"src"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"/cropperjs/v2/picture.jpg"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"alt"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"Picture"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),C=r(`<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p>Inherits properties from its parent, <a href="./cropper-element.html"><code>CropperElement</code></a>, and implements the following properties:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>rotatable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is rotatable.</td></tr><tr><td>scalable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is scalable.</td></tr><tr><td>skewable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is skewable.</td></tr><tr><td>slottable</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Indicates whether this element is slottable.</td></tr><tr><td>translatable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is translatable.</td></tr></tbody></table><p>The built-in <code>&lt;img&gt;</code> element will inherit the following attributes by default:</p><ul><li><code>alt</code></li><li><code>crossorigin</code></li><li><code>decoding</code></li><li><code>importance</code></li><li><code>loading</code></li><li><code>referrerpolicy</code></li><li><code>sizes</code></li><li><code>src</code></li><li><code>srcset</code></li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="ready" tabindex="-1">$ready <a class="header-anchor" href="#ready" aria-label="Permalink to &quot;$ready&quot;">​</a></h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$ready()</code></li><li><code>$ready(callback)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>callback</code>: <ul><li>Type: <code>Function</code></li><li>The callback to execute after successfully loading the image.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>Promise</code></li><li>A promise that resolves to the image element.</li></ul></li><li><p><strong>Example</strong>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cropperImage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CropperImage</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$ready</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">image</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">naturalWidth</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">naturalHeight</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">src </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/cropperjs/v2/picture.jpg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li></ul><p>Defers the callback to execute after successfully loading the image.</p><h3 id="center" tabindex="-1">$center <a class="header-anchor" href="#center" aria-label="Permalink to &quot;$center&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$center()</code></li><li><code>$center(size)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>size</code>: <ul><li>Type: <code>string</code></li><li>Options: <code>&#39;contain&#39;</code>, and <code>&#39;cover&#39;</code>.</li><li>The size of the image.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Aligns the image to the center of its parent element.</p><h3 id="move" tabindex="-1">$move <a class="header-anchor" href="#move" aria-label="Permalink to &quot;$move&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$move(x)</code></li><li><code>$move(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The moving distance in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The moving distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Moves the image.</p><h3 id="moveto" tabindex="-1">$moveTo <a class="header-anchor" href="#moveto" aria-label="Permalink to &quot;$moveTo&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$moveTo(x)</code></li><li><code>$moveTo(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The new position in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The new position in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Moves the image to a specific position.</p><h3 id="rotate" tabindex="-1">$rotate <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;$rotate&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <code>$rotate(angle)</code></li><li><strong>Arguments</strong>: <ul><li><code>angle</code>: <ul><li>Type: <code>number | string</code></li><li>The rotation angle (in radians). The default unit is <code>rad</code>.</li></ul></li><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the horizontal.</li><li>The rotation origin in the horizontal.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the vertical.</li><li>The rotation origin in the vertical.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><strong>Examples</strong>: <ul><li><code>$rotate(0.8)</code></li><li><code>$rotate(&#39;0.8rad&#39;)</code></li><li><code>$rotate(&#39;45deg&#39;)</code></li><li><code>$rotate(&#39;50grad&#39;)</code></li><li><code>$rotate(&#39;0.1turn&#39;)</code></li><li><code>$rotate(&#39;90deg&#39;, 0, 0)</code></li></ul></li></ul><p>Rotates the image. It is similar to CSS function <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate()" target="_blank" rel="noreferrer">rotate()</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate" target="_blank" rel="noreferrer">CanvasRenderingContext2D.rotate()</a>.</p><h3 id="zoom" tabindex="-1">$zoom <a class="header-anchor" href="#zoom" aria-label="Permalink to &quot;$zoom&quot;">​</a></h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$zoom(scale)</code></li><li><code>$zoom(scale, x, y)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>scale</code>: <ul><li>Type: <code>number</code></li><li>The zoom factor. Positive numbers for zooming in, and negative numbers for zooming out.</li></ul></li><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the horizontal.</li><li>The zoom origin in the horizontal.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the vertical.</li><li>The zoom origin in the vertical.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><p><strong>Examples</strong>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$zoom</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom in 10%</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$zoom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom out 10%</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$zoom</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom in from the top-left corner</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$zoom</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom out from the top-left corner</span></span></code></pre></div></li></ul><p>Zooms the image.</p><h3 id="scale" tabindex="-1">$scale <a class="header-anchor" href="#scale" aria-label="Permalink to &quot;$scale&quot;">​</a></h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$scale(x)</code></li><li><code>$scale(x, y)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The scaling factor in the vertical direction.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><p><strong>Examples</strong>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$scale</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom in 10%</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$scale</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.9</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Zoom out 10%</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$scale</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Flip both the horizontal and vertical directions</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$scale</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Flip the horizontal direction</span></span>
<span class="line"><span style="color:#A6ACCD;">cropperImage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$scale</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Flip the vertical direction</span></span></code></pre></div></li></ul><p>Scales the image. It is similar to CSS function <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/scale()" target="_blank" rel="noreferrer">scale()</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/scale" target="_blank" rel="noreferrer">CanvasRenderingContext2D.scale()</a>.</p><h3 id="skew" tabindex="-1">$skew <a class="header-anchor" href="#skew" aria-label="Permalink to &quot;$skew&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$skew(x)</code></li><li><code>$skew(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number | string</code></li><li>The skewing angle in the horizontal direction. The default unit is <code>rad</code>.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number | string</code></li><li>Default: <code>x</code></li><li>The skewing angle in the vertical direction. The default unit is <code>rad</code>.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><strong>Examples</strong>: <ul><li><code>$skew(0.8)</code></li><li><code>$skew(&#39;0.8rad&#39;)</code></li><li><code>$skew(&#39;45deg&#39;)</code></li><li><code>$skew(&#39;50grad&#39;)</code></li><li><code>$skew(&#39;0.1turn&#39;)</code></li><li><code>$skew(0, 0.8)</code></li></ul></li></ul><p>Skews the image. It is similar to CSS function <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew()" target="_blank" rel="noreferrer">skew()</a>.</p><h3 id="translate" tabindex="-1">$translate <a class="header-anchor" href="#translate" aria-label="Permalink to &quot;$translate&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$translate(x)</code></li><li><code>$translate(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Translates the image. It is similar to CSS function <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate()" target="_blank" rel="noreferrer">translate()</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate" target="_blank" rel="noreferrer">CanvasRenderingContext2D.translate()</a>.</p><h3 id="transform" tabindex="-1">$transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;$transform&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <code>$transform(a, b, c, d, e, f)</code></li><li><strong>Arguments</strong>: <ul><li><code>a</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the horizontal direction.</li></ul></li><li><code>b</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the vertical direction.</li></ul></li><li><code>c</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the horizontal direction.</li></ul></li><li><code>d</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the vertical direction.</li></ul></li><li><code>e</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>f</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Transforms the image. It is similar to CSS function <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()" target="_blank" rel="noreferrer">matrix()</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/transform" target="_blank" rel="noreferrer">CanvasRenderingContext2D.transform()</a>.</p><h3 id="settransform" tabindex="-1">$setTransform <a class="header-anchor" href="#settransform" aria-label="Permalink to &quot;$setTransform&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$setTransform(a, b, c, d, e, f)</code></li><li><code>$setTransform(a)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>a</code>: <ul><li>Type: <code>number | Array</code></li><li>The scaling factor in the horizontal direction, or the transformation matrix.</li></ul></li><li><code>b</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the vertical direction.</li></ul></li><li><code>c</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the horizontal direction.</li></ul></li><li><code>d</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the vertical direction.</li></ul></li><li><code>e</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>f</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Resets (overrides) the current transform to the specific identity matrix, and then invokes a transform described by the arguments of this method. This lets you scale, rotate, translate (move), and skew the context. It is similar to <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform" target="_blank" rel="noreferrer">CanvasRenderingContext2D.setTransform()</a>.</p><h3 id="gettransform" tabindex="-1">$getTransform <a class="header-anchor" href="#gettransform" aria-label="Permalink to &quot;$getTransform&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <code>$getTransform()</code></li><li><strong>Returns</strong>: <ul><li>Type: <code>Array</code></li><li>The current transformation matrix of the element.</li></ul></li></ul><p>Retrieves the current transformation matrix being applied to the element. It is similar to <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getTransform" target="_blank" rel="noreferrer">CanvasRenderingContext2D.getTransform()</a>.</p><h3 id="resettransform" tabindex="-1">$resetTransform <a class="header-anchor" href="#resettransform" aria-label="Permalink to &quot;$resetTransform&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <ul><li><code>$resetTransform()</code></li></ul></li><li><strong>Alternatives</strong>: <ul><li><code>$setTransform(1, 0, 0, 1, 0, 0)</code></li><li><code>$setTransform([1, 0, 0, 1, 0, 0])</code></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Resets the current transform to the initial identity matrix. It is similar to <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform" target="_blank" rel="noreferrer">CanvasRenderingContext2D.resetTransform()</a>.</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><h3 id="transform-1" tabindex="-1">transform <a class="header-anchor" href="#transform-1" aria-label="Permalink to &quot;transform&quot;">​</a></h3><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>true</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The transform information of the image.</li></ul></li><li><strong>event.detail.matrix</strong>: <ul><li>Type: <code>Array</code></li><li>The new (next) matrix object.</li></ul></li><li><strong>event.detail.oldMatrix</strong>: <ul><li>Type: <code>Array</code></li><li>The old (current) matrix object.</li></ul></li></ul></li></ul><p>The event is fired when the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform" target="_blank" rel="noreferrer"><code>transform</code></a> CSS property of the element is going to change.</p><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><p>There are no available slots in this element.</p><blockquote><p>You can enable the default slot by setting the <code>slottable</code> property to <code>true</code>:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cropper-image</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slottable</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">cropper-image</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></blockquote>`,52);function D(f,F,A,b,T,v){const t=n("LiveDemo"),s=n("ClientOnly");return c(),p("div",null,[h,l(s,null,{default:o(()=>[l(t,null,{default:o(()=>[u]),_:1})]),_:1}),m,g,l(s,null,{default:o(()=>[l(t,null,{default:o(()=>[y]),_:1})]),_:1}),C])}const $=i(d,[["render",D]]);export{k as __pageData,$ as default};
