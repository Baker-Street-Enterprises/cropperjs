"use strict";(self.webpackChunkcropperjs=self.webpackChunkcropperjs||[]).push([[966],{8229:function(n,t,a){a.r(t),a.d(t,{data:function(){return e}});const e=JSON.parse('{"key":"v-62a2d7a4","path":"/zh/api/cropper-canvas.html","title":"CropperCanvas","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[{"level":3,"title":"基本","slug":"基本","link":"#基本","children":[]},{"level":3,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":3,"title":"交互","slug":"交互","link":"#交互","children":[]},{"level":3,"title":"禁用","slug":"禁用","link":"#禁用","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"$setAction","slug":"setaction","link":"#setaction","children":[]},{"level":3,"title":"$toCanvas","slug":"tocanvas","link":"#tocanvas","children":[]}]},{"level":2,"title":"事件","slug":"事件","link":"#事件","children":[{"level":3,"title":"action","slug":"action","link":"#action","children":[]},{"level":3,"title":"actionstart","slug":"actionstart","link":"#actionstart","children":[]},{"level":3,"title":"actionmove","slug":"actionmove","link":"#actionmove","children":[]},{"level":3,"title":"actionend","slug":"actionend","link":"#actionend","children":[]}]},{"level":2,"title":"插槽","slug":"插槽","link":"#插槽","children":[]}],"git":{"updatedTime":1670149517000,"contributors":[{"name":"Chen Fengyuan","email":"chenfengyuan@outlook.com","commits":1}]},"filePathRelative":"zh/api/cropper-canvas.md"}')},3317:function(n,t,a){a.r(t),a.d(t,{default:function(){return U}});var e=a(6252);const s=(0,e.uE)('<h1 id="croppercanvas" tabindex="-1"><a class="header-anchor" href="#croppercanvas" aria-hidden="true">#</a> CropperCanvas</h1><p><code>CropperCanvas</code> 接口提供了用于操作 <code>&lt;cropper-canvas&gt;</code> 元素的布局和表示的属性和方法。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><h3 id="基本" tabindex="-1"><a class="header-anchor" href="#基本" aria-hidden="true">#</a> 基本</h3>',4),o=(0,e._)("div",{class:"language-html","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-canvas")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-canvas")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])])],-1),l=(0,e._)("div",{class:"custom-container tip"},[(0,e._)("p",{class:"custom-container-title"},"提示"),(0,e._)("p",null,[(0,e.Uk)("此元素的默认最小宽度和最小高度为 "),(0,e._)("code",null,"200px"),(0,e.Uk)(" 和 "),(0,e._)("code",null,"100px"),(0,e.Uk)("。")])],-1),c=(0,e._)("h3",{id:"背景",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),(0,e.Uk)(" 背景")],-1),i=(0,e._)("div",{class:"language-html","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-canvas")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"background"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-canvas")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])])],-1),u=(0,e._)("h3",{id:"交互",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#交互","aria-hidden":"true"},"#"),(0,e.Uk)(" 交互")],-1),d=(0,e._)("div",{class:"language-html","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-canvas")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"background"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-image")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"src"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("/cropperjs/v2/picture.jpg"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"alt"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("Picture"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-image")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-handle")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"action"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("move"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"plain"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-handle")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-canvas")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])])],-1),p=(0,e._)("h3",{id:"禁用",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#禁用","aria-hidden":"true"},"#"),(0,e.Uk)(" 禁用")],-1),r=(0,e._)("p",null,"所有指针事件均被禁用。",-1),k=(0,e._)("div",{class:"language-html","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-canvas")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"background"),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"disabled"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-image")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"src"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("/cropperjs/v2/picture.jpg"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"alt"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("Picture"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-image")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("cropper-handle")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"action"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("move"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"plain"),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-handle")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("cropper-canvas")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])])],-1),g=(0,e._)("h2",{id:"属性",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),(0,e.Uk)(" 属性")],-1),h=(0,e._)("code",null,"CropperElement",-1),v=(0,e.uE)('<table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>可选值</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>指示此元素是否具有网格背景。</td></tr><tr><td>disabled</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>指示此元素是否已禁用。</td></tr><tr><td>scaleStep</td><td><code>number</code></td><td><code>0.1</code></td><td>-</td><td>指示滚轮放大/缩小时缩放系数的步进间隔，必须为正数。</td></tr><tr><td>themeColor</td><td><code>string</code></td><td><code>&quot;#39f&quot;</code></td><td>-</td><td>指示此元素及其子元素的颜色。</td></tr></tbody></table><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="setaction" tabindex="-1"><a class="header-anchor" href="#setaction" aria-hidden="true">#</a> $setAction</h3><ul><li><strong>语法</strong>：<code>$setAction(action)</code></li><li><strong>参数</strong>： <ul><li><code>action</code>： <ul><li>类型：<code>string</code></li><li>新的动作。</li></ul></li></ul></li><li><strong>返回值</strong>： <ul><li>类型：<code>CropperCanvas</code></li><li>元素实例。</li></ul></li></ul><p>将当前动作变更为新动作。</p><h3 id="tocanvas" tabindex="-1"><a class="header-anchor" href="#tocanvas" aria-hidden="true">#</a> $toCanvas</h3>',6),_=(0,e.uE)("<li><strong>语法</strong>： <ul><li><code>$toCanvas()</code></li><li><code>$toCanvas(options)</code></li></ul></li><li><strong>参数</strong>： <ul><li><code>options</code>： <ul><li>类型：<code>Object</code></li><li>可用选项。</li><li>属性： <ul><li><code>width</code>： <ul><li>类型：<code>number</code></li><li>画布的宽度。</li></ul></li><li><code>height</code>： <ul><li>类型：<code>number</code></li><li>画布的高度。</li></ul></li><li><code>beforeDraw</code>： <ul><li>类型：<code>Function</code></li><li>在将图像绘制到画布上之前调用的函数。</li><li>语法：<code>beforeDraw(context, canvas)</code></li><li>参数： <ul><li><code>context</code>： <ul><li>类型：<code>CanvasRenderingContext2D</code></li><li>画布的 2D 渲染上下文。</li></ul></li><li><code>canvas</code>： <ul><li>类型：<code>HTMLCanvasElement</code></li><li>画布元素本身。</li></ul></li></ul></li><li>示例：<code>function (context) { context.filter = &#39;grayscale(100%)&#39;; }</code></li></ul></li></ul></li></ul></li></ul></li><li><strong>返回值</strong>： <ul><li>类型：<code>Promise</code></li><li>一个以生成的画布元素为给定值解析后的 Promise 对象。</li></ul></li>",3),m=(0,e._)("strong",null,"示例",-1),b=(0,e.uE)('<p>生成一个真实的画布元素，如果有图像，则将其绘制到其中。</p><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> action</h3><p>当指针在画布上变化时触发该事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>false</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：<code>&quot;select&quot;</code>, <code>&quot;move&quot;</code>, <code>&quot;scale&quot;</code>, <code>&quot;rotate&quot;</code>, <code>&quot;transform&quot;</code>, <code>&quot;n-resize&quot;</code>, <code>&quot;e-resize&quot;</code>, <code>&quot;s-resize&quot;</code>, <code>&quot;w-resize&quot;</code>, <code>&quot;ne-resize&quot;</code>, <code>&quot;nw-resize&quot;</code>, <code>&quot;se-resize&quot;</code>, and <code>&quot;sw-resize&quot;</code>.</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent | WheelEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li><li><strong>event.detail.scale</strong>： <ul><li>类型：<code>number</code></li><li>缩放系数，仅当 <code>action</code> 为 <code>&quot;scale&quot;</code> 或 <code>&quot;transform&quot;</code> 时可用。</li></ul></li><li><strong>event.detail.rotate</strong>： <ul><li>类型：<code>number</code></li><li>缩放系数，仅当 <code>action</code> 为 <code>&quot;rotate&quot;</code> 或 <code>&quot;transform&quot;</code> 时可用。</li></ul></li><li><strong>event.detail.startX</strong>： <ul><li>类型：<code>number</code></li><li>起始 <code>pageX</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.startY</strong>： <ul><li>类型：<code>number</code></li><li>起始 <code>pageY</code> 值，仅在 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.endX</strong>： <ul><li>类型：<code>number</code></li><li>结束 <code>pageX</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.endY</strong>： <ul><li>类型：<code>number</code></li><li>结束 <code>pageY</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li></ul></li><li>示例：</li></ul><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cropper-canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cropper-canvas</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\ndocument<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;action&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="actionstart" tabindex="-1"><a class="header-anchor" href="#actionstart" aria-hidden="true">#</a> actionstart</h3><p>当指针变为活动状态时触发该事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h3 id="actionmove" tabindex="-1"><a class="header-anchor" href="#actionmove" aria-hidden="true">#</a> actionmove</h3><p>当指针改变坐标时触发此事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h3 id="actionend" tabindex="-1"><a class="header-anchor" href="#actionend" aria-hidden="true">#</a> actionend</h3><p>当指针不再处于活动状态时会触发此事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h2 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h2><p>此元素中只有一个默认插槽。</p><blockquote><p>你可以通过将 <code>slottable</code> 属性设置为 <code>false</code> 来禁用它：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cropper-canvas</span> <span class="token attr-name">slottable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cropper-canvas</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></blockquote>',18),f={};var U=(0,a(3744).Z)(f,[["render",function(n,t){const a=(0,e.up)("LiveDemo"),f=(0,e.up)("ClientOnly"),U=(0,e.up)("RouterLink"),q=(0,e.up)("CropperCanvasToNativeCanvas");return(0,e.wg)(),(0,e.iD)("div",null,[s,(0,e.Wm)(f,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,null,{default:(0,e.w5)((()=>[o])),_:1})])),_:1}),l,c,(0,e.Wm)(f,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,null,{default:(0,e.w5)((()=>[i])),_:1})])),_:1}),u,(0,e.Wm)(f,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,null,{default:(0,e.w5)((()=>[d])),_:1})])),_:1}),p,r,(0,e.Wm)(f,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,null,{default:(0,e.w5)((()=>[k])),_:1})])),_:1}),g,(0,e._)("p",null,[(0,e.Uk)("从其父级 "),(0,e.Wm)(U,{to:"/zh/api/cropper-element.html"},{default:(0,e.w5)((()=>[h])),_:1}),(0,e.Uk)(" 继承属性，并实现以下属性：")]),v,(0,e._)("ul",null,[_,(0,e._)("li",null,[m,(0,e.Uk)("："),(0,e.Wm)(f,null,{default:(0,e.w5)((()=>[(0,e.Wm)(q)])),_:1})])]),b])}]])}}]);