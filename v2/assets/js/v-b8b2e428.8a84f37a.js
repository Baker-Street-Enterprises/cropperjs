"use strict";(self.webpackChunkcropperjs=self.webpackChunkcropperjs||[]).push([[761],{6007:function(e,n,t){t.r(n),t.d(n,{data:function(){return a}});const a=JSON.parse('{"key":"v-b8b2e428","path":"/api/cropper-image.html","title":"CropperImage","lang":"en-US","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"Examples","slug":"examples","link":"#examples","children":[{"level":3,"title":"Basic","slug":"basic","link":"#basic","children":[]},{"level":3,"title":"With image source","slug":"with-image-source","link":"#with-image-source","children":[]}]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"$ready","slug":"ready","link":"#ready","children":[]},{"level":3,"title":"$center","slug":"center","link":"#center","children":[]},{"level":3,"title":"$move","slug":"move","link":"#move","children":[]},{"level":3,"title":"$moveTo","slug":"moveto","link":"#moveto","children":[]},{"level":3,"title":"$rotate","slug":"rotate","link":"#rotate","children":[]},{"level":3,"title":"$zoom","slug":"zoom","link":"#zoom","children":[]},{"level":3,"title":"$scale","slug":"scale","link":"#scale","children":[]},{"level":3,"title":"$skew","slug":"skew","link":"#skew","children":[]},{"level":3,"title":"$translate","slug":"translate","link":"#translate","children":[]},{"level":3,"title":"$transform","slug":"transform","link":"#transform","children":[]},{"level":3,"title":"$setTransform","slug":"settransform","link":"#settransform","children":[]},{"level":3,"title":"$getTransform","slug":"gettransform","link":"#gettransform","children":[]},{"level":3,"title":"$resetTransform","slug":"resettransform","link":"#resettransform","children":[]}]},{"level":2,"title":"Events","slug":"events","link":"#events","children":[{"level":3,"title":"transform","slug":"transform-1","link":"#transform-1","children":[]}]},{"level":2,"title":"Slots","slug":"slots","link":"#slots","children":[]}],"git":{"updatedTime":1670149517000,"contributors":[{"name":"Chen Fengyuan","email":"chenfengyuan@outlook.com","commits":1}]},"filePathRelative":"api/cropper-image.md"}')},9971:function(e,n,t){t.r(n),t.d(n,{default:function(){return j}});var a=t(6252);const l=(0,a.uE)('<h1 id="cropperimage" tabindex="-1"><a class="header-anchor" href="#cropperimage" aria-hidden="true">#</a> CropperImage</h1><p>The <code>CropperImage</code> interface provides properties and methods for manipulating the layout and presentation of <code>&lt;cropper-image&gt;</code> elements.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="basic" tabindex="-1"><a class="header-anchor" href="#basic" aria-hidden="true">#</a> Basic</h3>',4),o=(0,a._)("div",{class:"language-html","data-ext":"html"},[(0,a._)("pre",{class:"language-html"},[(0,a._)("code",null,[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token punctuation"},"<"),(0,a.Uk)("cropper-image")]),(0,a._)("span",{class:"token punctuation"},">")]),(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token punctuation"},"</"),(0,a.Uk)("cropper-image")]),(0,a._)("span",{class:"token punctuation"},">")]),(0,a.Uk)("\n")])])],-1),s=(0,a._)("div",{class:"custom-container tip"},[(0,a._)("p",{class:"custom-container-title"},"TIP"),(0,a._)("p",null,[(0,a.Uk)("The default width and height of this element is "),(0,a._)("code",null,"0"),(0,a.Uk)(".")])],-1),i=(0,a._)("h3",{id:"with-image-source",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#with-image-source","aria-hidden":"true"},"#"),(0,a.Uk)(" With image source")],-1),r=(0,a._)("div",{class:"language-html","data-ext":"html"},[(0,a._)("pre",{class:"language-html"},[(0,a._)("code",null,[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token punctuation"},"<"),(0,a.Uk)("cropper-image")]),(0,a.Uk)(),(0,a._)("span",{class:"token attr-name"},"src"),(0,a._)("span",{class:"token attr-value"},[(0,a._)("span",{class:"token punctuation attr-equals"},"="),(0,a._)("span",{class:"token punctuation"},'"'),(0,a.Uk)("/cropperjs/v2/picture.jpg"),(0,a._)("span",{class:"token punctuation"},'"')]),(0,a.Uk)(),(0,a._)("span",{class:"token attr-name"},"alt"),(0,a._)("span",{class:"token attr-value"},[(0,a._)("span",{class:"token punctuation attr-equals"},"="),(0,a._)("span",{class:"token punctuation"},'"'),(0,a.Uk)("Picture"),(0,a._)("span",{class:"token punctuation"},'"')]),(0,a._)("span",{class:"token punctuation"},">")]),(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token tag"},[(0,a._)("span",{class:"token punctuation"},"</"),(0,a.Uk)("cropper-image")]),(0,a._)("span",{class:"token punctuation"},">")]),(0,a.Uk)("\n")])])],-1),c=(0,a._)("h2",{id:"properties",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),(0,a.Uk)(" Properties")],-1),d=(0,a._)("code",null,"CropperElement",-1),p=(0,a.uE)('<table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>rotatable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is rotatable.</td></tr><tr><td>scalable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is scalable.</td></tr><tr><td>skewable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is skewable.</td></tr><tr><td>slottable</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Indicates whether this element is slottable.</td></tr><tr><td>translatable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Indicates whether this element is translatable.</td></tr></tbody></table><p>The built-in <code>&lt;img&gt;</code> element will inherit the following attributes by default:</p><ul><li><code>alt</code></li><li><code>crossorigin</code></li><li><code>decoding</code></li><li><code>importance</code></li><li><code>loading</code></li><li><code>referrerpolicy</code></li><li><code>sizes</code></li><li><code>src</code></li><li><code>srcset</code></li></ul><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="ready" tabindex="-1"><a class="header-anchor" href="#ready" aria-hidden="true">#</a> $ready</h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$ready()</code></li><li><code>$ready(callback)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>callback</code>: <ul><li>Type: <code>Function</code></li><li>The callback to execute after successfully loading the image.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>Promise</code></li><li>A promise that resolves to the image element.</li></ul></li><li><p><strong>Example</strong>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cropperImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CropperImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ncropperImage<span class="token punctuation">.</span><span class="token function">$ready</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">image</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">,</span> image<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncropperImage<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;/cropperjs/v2/picture.jpg&#39;</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><p>Defers the callback to execute after successfully loading the image.</p><h3 id="center" tabindex="-1"><a class="header-anchor" href="#center" aria-hidden="true">#</a> $center</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$center()</code></li><li><code>$center(size)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>size</code>: <ul><li>Type: <code>string</code></li><li>Options: <code>&#39;contain&#39;</code>, and <code>&#39;cover&#39;</code>.</li><li>The size of the image.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Aligns the image to the center of its parent element.</p><h3 id="move" tabindex="-1"><a class="header-anchor" href="#move" aria-hidden="true">#</a> $move</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$move(x)</code></li><li><code>$move(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The moving distance in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The moving distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Moves the image.</p><h3 id="moveto" tabindex="-1"><a class="header-anchor" href="#moveto" aria-hidden="true">#</a> $moveTo</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$moveTo(x)</code></li><li><code>$moveTo(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The new position in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The new position in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Moves the image to a specific position.</p><h3 id="rotate" tabindex="-1"><a class="header-anchor" href="#rotate" aria-hidden="true">#</a> $rotate</h3><ul><li><strong>Syntax</strong>: <code>$rotate(angle)</code></li><li><strong>Arguments</strong>: <ul><li><code>angle</code>: <ul><li>Type: <code>number | string</code></li><li>The rotation angle (in radians). The default unit is <code>rad</code>.</li></ul></li><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the horizontal.</li><li>The rotation origin in the horizontal.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the vertical.</li><li>The rotation origin in the vertical.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><strong>Examples</strong>: <ul><li><code>$rotate(0.8)</code></li><li><code>$rotate(&#39;0.8rad&#39;)</code></li><li><code>$rotate(&#39;45deg&#39;)</code></li><li><code>$rotate(&#39;50grad&#39;)</code></li><li><code>$rotate(&#39;0.1turn&#39;)</code></li><li><code>$rotate(&#39;90deg&#39;, 0, 0)</code></li></ul></li></ul>',18),u={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotate()",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate",target:"_blank",rel:"noopener noreferrer"},m=(0,a.uE)('<h3 id="zoom" tabindex="-1"><a class="header-anchor" href="#zoom" aria-hidden="true">#</a> $zoom</h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$zoom(scale)</code></li><li><code>$zoom(scale, x, y)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>scale</code>: <ul><li>Type: <code>number</code></li><li>The zoom factor. Positive numbers for zooming in, and negative numbers for zooming out.</li></ul></li><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the horizontal.</li><li>The zoom origin in the horizontal.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: The center of the image in the vertical.</li><li>The zoom origin in the vertical.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><p><strong>Examples</strong>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>cropperImage<span class="token punctuation">.</span><span class="token function">$zoom</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom in 10%</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$zoom</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom out 10%</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$zoom</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom in from the top-left corner</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$zoom</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom out from the top-left corner</span>\n</code></pre></div></li></ul><p>Zooms the image.</p><h3 id="scale" tabindex="-1"><a class="header-anchor" href="#scale" aria-hidden="true">#</a> $scale</h3><ul><li><p><strong>Syntax</strong>:</p><ul><li><code>$scale(x)</code></li><li><code>$scale(x, y)</code></li></ul></li><li><p><strong>Arguments</strong>:</p><ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The scaling factor in the vertical direction.</li></ul></li></ul></li><li><p><strong>Returns</strong>:</p><ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><p><strong>Examples</strong>:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>cropperImage<span class="token punctuation">.</span><span class="token function">$scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom in 10%</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$scale</span><span class="token punctuation">(</span><span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Zoom out 10%</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$scale</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Flip both the horizontal and vertical directions</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$scale</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Flip the horizontal direction</span>\ncropperImage<span class="token punctuation">.</span><span class="token function">$scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Flip the vertical direction</span>\n</code></pre></div></li></ul>',5),g={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/scale()",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/scale",target:"_blank",rel:"noopener noreferrer"},f=(0,a.uE)('<h3 id="skew" tabindex="-1"><a class="header-anchor" href="#skew" aria-hidden="true">#</a> $skew</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$skew(x)</code></li><li><code>$skew(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number | string</code></li><li>The skewing angle in the horizontal direction. The default unit is <code>rad</code>.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number | string</code></li><li>Default: <code>x</code></li><li>The skewing angle in the vertical direction. The default unit is <code>rad</code>.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li><li><strong>Examples</strong>: <ul><li><code>$skew(0.8)</code></li><li><code>$skew(&#39;0.8rad&#39;)</code></li><li><code>$skew(&#39;45deg&#39;)</code></li><li><code>$skew(&#39;50grad&#39;)</code></li><li><code>$skew(&#39;0.1turn&#39;)</code></li><li><code>$skew(0, 0.8)</code></li></ul></li></ul>',2),b={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew()",target:"_blank",rel:"noopener noreferrer"},v=(0,a.uE)('<h3 id="translate" tabindex="-1"><a class="header-anchor" href="#translate" aria-hidden="true">#</a> $translate</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$translate(x)</code></li><li><code>$translate(x, y)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>x</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>y</code>: <ul><li>Type: <code>number</code></li><li>Default: <code>x</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul>',2),T={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate()",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate",target:"_blank",rel:"noopener noreferrer"},y=(0,a.uE)('<h3 id="transform" tabindex="-1"><a class="header-anchor" href="#transform" aria-hidden="true">#</a> $transform</h3><ul><li><strong>Syntax</strong>: <code>$transform(a, b, c, d, e, f)</code></li><li><strong>Arguments</strong>: <ul><li><code>a</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the horizontal direction.</li></ul></li><li><code>b</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the vertical direction.</li></ul></li><li><code>c</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the horizontal direction.</li></ul></li><li><code>d</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the vertical direction.</li></ul></li><li><code>e</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>f</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul>',2),_={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()",target:"_blank",rel:"noopener noreferrer"},$={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/transform",target:"_blank",rel:"noopener noreferrer"},U=(0,a.uE)('<h3 id="settransform" tabindex="-1"><a class="header-anchor" href="#settransform" aria-hidden="true">#</a> $setTransform</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$setTransform(a, b, c, d, e, f)</code></li><li><code>$setTransform(a)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>a</code>: <ul><li>Type: <code>number | Array</code></li><li>The scaling factor in the horizontal direction, or the transformation matrix.</li></ul></li><li><code>b</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the vertical direction.</li></ul></li><li><code>c</code>: <ul><li>Type: <code>number</code></li><li>The skewing angle in the horizontal direction.</li></ul></li><li><code>d</code>: <ul><li>Type: <code>number</code></li><li>The scaling factor in the vertical direction.</li></ul></li><li><code>e</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the horizontal direction.</li></ul></li><li><code>f</code>: <ul><li>Type: <code>number</code></li><li>The translating distance in the vertical direction.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul>',2),C={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform",target:"_blank",rel:"noopener noreferrer"},S=(0,a.uE)('<h3 id="gettransform" tabindex="-1"><a class="header-anchor" href="#gettransform" aria-hidden="true">#</a> $getTransform</h3><ul><li><strong>Syntax</strong>: <code>$getTransform()</code></li><li><strong>Returns</strong>: <ul><li>Type: <code>Array</code></li><li>The current transformation matrix of the element.</li></ul></li></ul>',2),w={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getTransform",target:"_blank",rel:"noopener noreferrer"},z=(0,a.uE)('<h3 id="resettransform" tabindex="-1"><a class="header-anchor" href="#resettransform" aria-hidden="true">#</a> $resetTransform</h3><ul><li><strong>Syntax</strong>: <ul><li><code>$resetTransform()</code></li></ul></li><li><strong>Alternatives</strong>: <ul><li><code>$setTransform(1, 0, 0, 1, 0, 0)</code></li><li><code>$setTransform([1, 0, 0, 1, 0, 0])</code></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperImage</code></li><li>The element instance for chaining.</li></ul></li></ul>',2),I={href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform",target:"_blank",rel:"noopener noreferrer"},W=(0,a.uE)('<h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><h3 id="transform-1" tabindex="-1"><a class="header-anchor" href="#transform-1" aria-hidden="true">#</a> transform</h3><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>true</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The transform information of the image.</li></ul></li><li><strong>event.detail.matrix</strong>: <ul><li>Type: <code>Array</code></li><li>The new (next) matrix object.</li></ul></li><li><strong>event.detail.oldMatrix</strong>: <ul><li>Type: <code>Array</code></li><li>The old (current) matrix object.</li></ul></li></ul></li></ul>',3),R={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform",target:"_blank",rel:"noopener noreferrer"},D=(0,a._)("code",null,"transform",-1),A=(0,a.uE)('<h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><p>There are no available slots in this element.</p><blockquote><p>You can enable the default slot by setting the <code>slottable</code> property to <code>true</code>:</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cropper-image</span> <span class="token attr-name">slottable</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cropper-image</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></blockquote>',3),E={};var j=(0,t(3744).Z)(E,[["render",function(e,n){const t=(0,a.up)("LiveDemo"),E=(0,a.up)("ClientOnly"),j=(0,a.up)("RouterLink"),P=(0,a.up)("ExternalLinkIcon");return(0,a.wg)(),(0,a.iD)("div",null,[l,(0,a.Wm)(E,null,{default:(0,a.w5)((()=>[(0,a.Wm)(t,null,{default:(0,a.w5)((()=>[o])),_:1})])),_:1}),s,i,(0,a.Wm)(E,null,{default:(0,a.w5)((()=>[(0,a.Wm)(t,null,{default:(0,a.w5)((()=>[r])),_:1})])),_:1}),c,(0,a._)("p",null,[(0,a.Uk)("Inherits properties from its parent, "),(0,a.Wm)(j,{to:"/api/cropper-element.html"},{default:(0,a.w5)((()=>[d])),_:1}),(0,a.Uk)(", and implements the following properties:")]),p,(0,a._)("p",null,[(0,a.Uk)("Rotates the image. It is similar to CSS function "),(0,a._)("a",u,[(0,a.Uk)("rotate()"),(0,a.Wm)(P)]),(0,a.Uk)(" or "),(0,a._)("a",h,[(0,a.Uk)("CanvasRenderingContext2D.rotate()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),m,(0,a._)("p",null,[(0,a.Uk)("Scales the image. It is similar to CSS function "),(0,a._)("a",g,[(0,a.Uk)("scale()"),(0,a.Wm)(P)]),(0,a.Uk)(" or "),(0,a._)("a",k,[(0,a.Uk)("CanvasRenderingContext2D.scale()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),f,(0,a._)("p",null,[(0,a.Uk)("Skews the image. It is similar to CSS function "),(0,a._)("a",b,[(0,a.Uk)("skew()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),v,(0,a._)("p",null,[(0,a.Uk)("Translates the image. It is similar to CSS function "),(0,a._)("a",T,[(0,a.Uk)("translate()"),(0,a.Wm)(P)]),(0,a.Uk)(" or "),(0,a._)("a",x,[(0,a.Uk)("CanvasRenderingContext2D.translate()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),y,(0,a._)("p",null,[(0,a.Uk)("Transforms the image. It is similar to CSS function "),(0,a._)("a",_,[(0,a.Uk)("matrix()"),(0,a.Wm)(P)]),(0,a.Uk)(" or "),(0,a._)("a",$,[(0,a.Uk)("CanvasRenderingContext2D.transform()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),U,(0,a._)("p",null,[(0,a.Uk)("Resets (overrides) the current transform to the specific identity matrix, and then invokes a transform described by the arguments of this method. This lets you scale, rotate, translate (move), and skew the context. It is similar to "),(0,a._)("a",C,[(0,a.Uk)("CanvasRenderingContext2D.setTransform()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),S,(0,a._)("p",null,[(0,a.Uk)("Retrieves the current transformation matrix being applied to the element. It is similar to "),(0,a._)("a",w,[(0,a.Uk)("CanvasRenderingContext2D.getTransform()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),z,(0,a._)("p",null,[(0,a.Uk)("Resets the current transform to the initial identity matrix. It is similar to "),(0,a._)("a",I,[(0,a.Uk)("CanvasRenderingContext2D.resetTransform()"),(0,a.Wm)(P)]),(0,a.Uk)(".")]),W,(0,a._)("p",null,[(0,a.Uk)("The event is fired when the "),(0,a._)("a",R,[D,(0,a.Wm)(P)]),(0,a.Uk)(" CSS property of the element is going to change.")]),A])}]])}}]);