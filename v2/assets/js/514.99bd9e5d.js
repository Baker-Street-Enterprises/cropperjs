"use strict";(self.webpackChunkcropperjs=self.webpackChunkcropperjs||[]).push([[514],{2514:function(e,t,r){r.r(t),r.d(t,{default:function(){return p}});var o=r(6252);const n=["value"];function u(e,t,r,o){const n=(e+(o||"")).toString().includes("%");if("string"==typeof e?[e,t,r,o]=e.match(/(0?\.?\d{1,3})%?\b/g).map((e=>Number(e))):void 0!==o&&(o=Number.parseFloat(o)),"number"!=typeof e||"number"!=typeof t||"number"!=typeof r||e>255||t>255||r>255)throw new TypeError("Expected three numbers below 256");if("number"==typeof o){if(!n&&o>=0&&o<=1)o=Math.round(255*o);else{if(!(n&&o>=0&&o<=100))throw new TypeError(`Expected alpha value (${o}) as a fraction or percentage`);o=Math.round(255*o/100)}o=(256|o).toString(16).slice(1)}else o="";return(r|t<<8|e<<16|1<<24).toString(16).slice(1)+o}const l="update:modelValue";var a={name:"ColorInput",props:{modelValue:{type:String,default:""}},emits:[l],computed:{modelValueAsHex(){const{modelValue:e}=this;return e.includes("rgba")?u(e):e}},methods:{rgbHex:u,onInput(e){this.$emit(l,e.target.value,this.modelValue)}}},p=(0,r(3744).Z)(a,[["render",function(e,t,r,u,l,a){return(0,o.wg)(),(0,o.iD)("input",{type:"color",class:"form-control form-control-color form-control-sm",value:a.modelValueAsHex,onInput:t[0]||(t[0]=(...e)=>a.onInput&&a.onInput(...e))},null,40,n)}]])}}]);