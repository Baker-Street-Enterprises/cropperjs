import{_ as i,H as c,o as d,c as p,J as l,E as t,C as e,a as o,V as n}from"./chunks/framework.e7a370da.js";const $=JSON.parse('{"title":"CropperCanvas","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/cropper-canvas.md","filePath":"zh/api/cropper-canvas.md","lastUpdated":1687075319000}'),u={name:"zh/api/cropper-canvas.md"},D=n('<h1 id="croppercanvas" tabindex="-1">CropperCanvas <a class="header-anchor" href="#croppercanvas" aria-label="Permalink to &quot;CropperCanvas&quot;">​</a></h1><p><code>CropperCanvas</code> 接口提供了用于操作 <code>&lt;cropper-canvas&gt;</code> 元素的布局和表示的属性和方法。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="基本" tabindex="-1">基本 <a class="header-anchor" href="#基本" aria-label="Permalink to &quot;基本&quot;">​</a></h3>',4),F=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),y=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,[o("此元素的默认最小宽度和最小高度为 "),e("code",null,"200px"),o(" 和 "),e("code",null,"100px"),o("。")])],-1),h=e("h3",{id:"背景",tabindex:"-1"},[o("背景 "),e("a",{class:"header-anchor",href:"#背景","aria-label":'Permalink to "背景"'},"​")],-1),v=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),g=e("h3",{id:"交互",tabindex:"-1"},[o("交互 "),e("a",{class:"header-anchor",href:"#交互","aria-label":'Permalink to "交互"'},"​")],-1),C=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"src"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"/cropperjs/v2/picture.jpg"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"alt"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"Picture"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"action"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"move"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"plain"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"</"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),_=e("h3",{id:"禁用",tabindex:"-1"},[o("禁用 "),e("a",{class:"header-anchor",href:"#禁用","aria-label":'Permalink to "禁用"'},"​")],-1),m=e("p",null,"所有指针事件均被禁用。",-1),b=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"disabled"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"src"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"/cropperjs/v2/picture.jpg"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"alt"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"Picture"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"action"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"move"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"plain"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"</"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),q=n('<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p>从其父级 <a href="./cropper-element.html"><code>CropperElement</code></a> 继承属性，并实现以下属性：</p><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>可选值</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>指示此元素是否具有网格背景。</td></tr><tr><td>disabled</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>指示此元素是否已禁用。</td></tr><tr><td>scaleStep</td><td><code>number</code></td><td><code>0.1</code></td><td>-</td><td>指示滚轮放大/缩小时缩放系数的步进间隔，必须为正数。</td></tr><tr><td>themeColor</td><td><code>string</code></td><td><code>&quot;#39f&quot;</code></td><td>-</td><td>指示此元素及其子元素的颜色。</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="setaction" tabindex="-1">$setAction <a class="header-anchor" href="#setaction" aria-label="Permalink to &quot;$setAction&quot;">​</a></h3><ul><li><strong>语法</strong>：<code>$setAction(action)</code></li><li><strong>参数</strong>： <ul><li><code>action</code>： <ul><li>类型：<code>string</code></li><li>新的动作。</li></ul></li></ul></li><li><strong>返回值</strong>： <ul><li>类型：<code>CropperCanvas</code></li><li>元素实例。</li></ul></li></ul><p>将当前动作变更为新动作。</p><h3 id="tocanvas" tabindex="-1">$toCanvas <a class="header-anchor" href="#tocanvas" aria-label="Permalink to &quot;$toCanvas&quot;">​</a></h3>',8),E=n("<li><strong>语法</strong>： <ul><li><code>$toCanvas()</code></li><li><code>$toCanvas(options)</code></li></ul></li><li><strong>参数</strong>： <ul><li><code>options</code>： <ul><li>类型：<code>Object</code></li><li>可用选项。</li><li>属性： <ul><li><code>width</code>： <ul><li>类型：<code>number</code></li><li>画布的宽度。</li></ul></li><li><code>height</code>： <ul><li>类型：<code>number</code></li><li>画布的高度。</li></ul></li><li><code>beforeDraw</code>： <ul><li>类型：<code>Function</code></li><li>在将图像绘制到画布上之前调用的函数。</li><li>语法：<code>beforeDraw(context, canvas)</code></li><li>参数： <ul><li><code>context</code>： <ul><li>类型：<code>CanvasRenderingContext2D</code></li><li>画布的 2D 渲染上下文。</li></ul></li><li><code>canvas</code>： <ul><li>类型：<code>HTMLCanvasElement</code></li><li>画布元素本身。</li></ul></li></ul></li><li>示例：<code>function (context) { context.filter = &#39;grayscale(100%)&#39;; }</code></li></ul></li></ul></li></ul></li></ul></li><li><strong>返回值</strong>： <ul><li>类型：<code>Promise</code></li><li>一个以生成的画布元素为给定值解析后的 Promise 对象。</li></ul></li>",3),A=e("strong",null,"示例",-1),f=n(`<p>生成一个真实的画布元素，如果有图像，则将其绘制到其中。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="action" tabindex="-1">action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;action&quot;">​</a></h3><p>当指针在画布上变化时触发该事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>false</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：<code>&quot;select&quot;</code>, <code>&quot;move&quot;</code>, <code>&quot;scale&quot;</code>, <code>&quot;rotate&quot;</code>, <code>&quot;transform&quot;</code>, <code>&quot;n-resize&quot;</code>, <code>&quot;e-resize&quot;</code>, <code>&quot;s-resize&quot;</code>, <code>&quot;w-resize&quot;</code>, <code>&quot;ne-resize&quot;</code>, <code>&quot;nw-resize&quot;</code>, <code>&quot;se-resize&quot;</code>, and <code>&quot;sw-resize&quot;</code>.</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent | WheelEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li><li><strong>event.detail.scale</strong>： <ul><li>类型：<code>number</code></li><li>缩放系数，仅当 <code>action</code> 为 <code>&quot;scale&quot;</code> 或 <code>&quot;transform&quot;</code> 时可用。</li></ul></li><li><strong>event.detail.rotate</strong>： <ul><li>类型：<code>number</code></li><li>缩放系数，仅当 <code>action</code> 为 <code>&quot;rotate&quot;</code> 或 <code>&quot;transform&quot;</code> 时可用。</li></ul></li><li><strong>event.detail.startX</strong>： <ul><li>类型：<code>number</code></li><li>起始 <code>pageX</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.startY</strong>： <ul><li>类型：<code>number</code></li><li>起始 <code>pageY</code> 值，仅在 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.endX</strong>： <ul><li>类型：<code>number</code></li><li>结束 <code>pageX</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li><li><strong>event.detail.endY</strong>： <ul><li>类型：<code>number</code></li><li>结束 <code>pageY</code> 值，仅当 <code>relatedEvent</code> 为 <code>PointerEvent</code>、<code>TouchEvent</code> 或 <code>MouseEvent</code> 时可用。</li></ul></li></ul></li><li>示例：</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">canvas</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#canvas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">action</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="actionstart" tabindex="-1">actionstart <a class="header-anchor" href="#actionstart" aria-label="Permalink to &quot;actionstart&quot;">​</a></h3><p>当指针变为活动状态时触发该事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h3 id="actionmove" tabindex="-1">actionmove <a class="header-anchor" href="#actionmove" aria-label="Permalink to &quot;actionmove&quot;">​</a></h3><p>当指针改变坐标时触发此事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h3 id="actionend" tabindex="-1">actionend <a class="header-anchor" href="#actionend" aria-label="Permalink to &quot;actionend&quot;">​</a></h3><p>当指针不再处于活动状态时会触发此事件。</p><ul><li>事件： <ul><li><strong>event.bubbles</strong>：<code>true</code></li><li><strong>event.cancelable</strong>：<code>true</code></li><li><strong>event.composed</strong>：<code>true</code></li><li><strong>event.detail</strong>： <ul><li>类型：<code>Object</code></li><li>动作的相关数据。</li></ul></li><li><strong>event.detail.action</strong>： <ul><li>类型：<code>string</code></li><li>可选值：同 <code>action</code> 事件。</li><li>动作类型。</li></ul></li><li><strong>event.detail.relatedEvent</strong>： <ul><li>类型：<code>PointerEvent | TouchEvent | MouseEvent</code></li><li>触发此事件的相关原生事件。</li></ul></li></ul></li></ul><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><p>此元素中只有一个默认插槽。</p><blockquote><p>你可以通过将 <code>slottable</code> 属性设置为 <code>false</code> 来禁用它：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slottable</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></blockquote>`,18);function P(T,k,x,S,V,z){const a=c("LiveDemo"),s=c("ClientOnly"),r=c("CropperCanvasToNativeCanvas");return d(),p("div",null,[D,l(s,null,{default:t(()=>[l(a,null,{default:t(()=>[F]),_:1})]),_:1}),y,h,l(s,null,{default:t(()=>[l(a,null,{default:t(()=>[v]),_:1})]),_:1}),g,l(s,null,{default:t(()=>[l(a,null,{default:t(()=>[C]),_:1})]),_:1}),_,m,l(s,null,{default:t(()=>[l(a,null,{default:t(()=>[b]),_:1})]),_:1}),q,e("ul",null,[E,e("li",null,[A,o("："),l(s,null,{default:t(()=>[l(r)]),_:1})])]),f])}const j=i(u,[["render",P]]);export{$ as __pageData,j as default};
