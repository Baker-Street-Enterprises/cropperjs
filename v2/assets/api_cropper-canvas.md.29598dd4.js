import{_ as r,H as c,o as p,c as d,J as l,E as t,C as e,a as o,V as n}from"./chunks/framework.e7a370da.js";const V=JSON.parse('{"title":"CropperCanvas","description":"","frontmatter":{},"headers":[],"relativePath":"api/cropper-canvas.md","filePath":"api/cropper-canvas.md","lastUpdated":1686469647000}'),u={name:"api/cropper-canvas.md"},h=n('<h1 id="croppercanvas" tabindex="-1">CropperCanvas <a class="header-anchor" href="#croppercanvas" aria-label="Permalink to &quot;CropperCanvas&quot;">​</a></h1><p>The <code>CropperCanvas</code> interface provides properties and methods for manipulating the layout and presentation of <code>&lt;cropper-canvas&gt;</code> elements.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="basic" tabindex="-1">Basic <a class="header-anchor" href="#basic" aria-label="Permalink to &quot;Basic&quot;">​</a></h3>',4),y=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),D=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,[o("The default minimum width and minimum height of this element are "),e("code",null,"200px"),o(" and "),e("code",null,"100px"),o(".")])],-1),F=e("h3",{id:"background",tabindex:"-1"},[o("Background "),e("a",{class:"header-anchor",href:"#background","aria-label":'Permalink to "Background"'},"​")],-1),v=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),g=e("h3",{id:"interactive",tabindex:"-1"},[o("Interactive "),e("a",{class:"header-anchor",href:"#interactive","aria-label":'Permalink to "Interactive"'},"​")],-1),m=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"src"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"/cropperjs/v2/picture.jpg"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"alt"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"Picture"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"action"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"move"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"plain"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"</"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),b=e("h3",{id:"disabled",tabindex:"-1"},[o("Disabled "),e("a",{class:"header-anchor",href:"#disabled","aria-label":'Permalink to "Disabled"'},"​")],-1),C=e("p",null,"All pointer events are disabled.",-1),_=e("div",{class:"language-html"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"html"),e("pre",{class:"shiki material-theme-palenight"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"background"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"disabled"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"src"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"/cropperjs/v2/picture.jpg"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"alt"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"Picture"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-image"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#A6ACCD"}},"  "),e("span",{style:{color:"#89DDFF"}},"<"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"action"),e("span",{style:{color:"#89DDFF"}},"="),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#C3E88D"}},"move"),e("span",{style:{color:"#89DDFF"}},'"'),e("span",{style:{color:"#89DDFF"}}," "),e("span",{style:{color:"#C792EA"}},"plain"),e("span",{style:{color:"#89DDFF"}},"></"),e("span",{style:{color:"#F07178"}},"cropper-handle"),e("span",{style:{color:"#89DDFF"}},">")]),o(`
`),e("span",{class:"line"},[e("span",{style:{color:"#89DDFF"}},"</"),e("span",{style:{color:"#F07178"}},"cropper-canvas"),e("span",{style:{color:"#89DDFF"}},">")])])])],-1),T=n('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p>Inherits properties from its parent, <a href="./cropper-element.html"><code>CropperElement</code></a>, and implements the following properties:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>background</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Indicates whether this element has a grid background.</td></tr><tr><td>disabled</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Indicates whether this element is disabled.</td></tr><tr><td>scaleStep</td><td><code>number</code></td><td><code>0.1</code></td><td>-</td><td>Indicates the stepping interval of the scaling factor when zooming in/out by wheeling, must a positive number.</td></tr><tr><td>themeColor</td><td><code>string</code></td><td><code>&quot;#39f&quot;</code></td><td>-</td><td>Indicates the primary color of this element and its children.</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="setaction" tabindex="-1">$setAction <a class="header-anchor" href="#setaction" aria-label="Permalink to &quot;$setAction&quot;">​</a></h3><ul><li><strong>Syntax</strong>: <code>$setAction(action)</code></li><li><strong>Arguments</strong>: <ul><li><code>action</code>: <ul><li>Type: <code>string</code></li><li>The new action.</li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>CropperCanvas</code></li><li>The element instance for chaining.</li></ul></li></ul><p>Changes the current action to a new one.</p><h3 id="tocanvas" tabindex="-1">$toCanvas <a class="header-anchor" href="#tocanvas" aria-label="Permalink to &quot;$toCanvas&quot;">​</a></h3>',8),f=n("<li><strong>Syntax</strong>: <ul><li><code>$toCanvas()</code></li><li><code>$toCanvas(options)</code></li></ul></li><li><strong>Arguments</strong>: <ul><li><code>options</code>: <ul><li>Type: <code>Object</code></li><li>The available options.</li><li>Properties: <ul><li><code>width</code>: <ul><li>Type: <code>number</code></li><li>The width of the canvas.</li></ul></li><li><code>height</code>: <ul><li>Type: <code>number</code></li><li>The height of the canvas.</li></ul></li><li><code>beforeDraw</code>: <ul><li>Type: <code>Function</code></li><li>The function called before drawing the image onto the canvas.</li><li>Syntax: <code>beforeDraw(context, canvas)</code></li><li>Arguments: <ul><li><code>context</code>: <ul><li>Type: <code>CanvasRenderingContext2D</code></li><li>The 2D rendering context of the canvas.</li></ul></li><li><code>canvas</code>: <ul><li>Type: <code>HTMLCanvasElement</code></li><li>The canvas element itself.</li></ul></li></ul></li><li>Example: <code>function (context) { context.filter = &#39;grayscale(100%)&#39;; }</code></li></ul></li></ul></li></ul></li></ul></li><li><strong>Returns</strong>: <ul><li>Type: <code>Promise</code></li><li>A promise that resolves to the generated canvas element.</li></ul></li>",3),E=e("strong",null,"Example",-1),A=n(`<p>Generates a real canvas element, with the image drawn into if there is one.</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><h3 id="action" tabindex="-1">action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;action&quot;">​</a></h3><p>The event is fired when a pointer changes on the canvas.</p><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>false</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The related data of the action.</li></ul></li><li><strong>event.detail.action</strong>: <ul><li>Type: <code>string</code></li><li>Options: <code>&quot;select&quot;</code>, <code>&quot;move&quot;</code>, <code>&quot;scale&quot;</code>, <code>&quot;rotate&quot;</code>, <code>&quot;transform&quot;</code>, <code>&quot;n-resize&quot;</code>, <code>&quot;e-resize&quot;</code>, <code>&quot;s-resize&quot;</code>, <code>&quot;w-resize&quot;</code>, <code>&quot;ne-resize&quot;</code>, <code>&quot;nw-resize&quot;</code>, <code>&quot;se-resize&quot;</code>, and <code>&quot;sw-resize&quot;</code>.</li><li>The action type.</li></ul></li><li><strong>event.detail.relatedEvent</strong>: <ul><li>Type: <code>PointerEvent | TouchEvent | MouseEvent | WheelEvent</code></li><li>The related native event that triggered this event.</li></ul></li><li><strong>event.detail.scale</strong>: <ul><li>Type: <code>number</code></li><li>The scaling factor, only available when the <code>action</code> is <code>&quot;scale&quot;</code> or <code>&quot;transform&quot;</code>.</li></ul></li><li><strong>event.detail.rotate</strong>: <ul><li>Type: <code>number</code></li><li>The scaling factor, only available when the <code>action</code> is <code>&quot;rotate&quot;</code>or <code>&quot;transform&quot;</code>.</li></ul></li><li><strong>event.detail.startX</strong>: <ul><li>Type: <code>number</code></li><li>The starting <code>pageX</code> value, only available when the <code>relatedEvent</code> is <code>PointerEvent</code>, <code>TouchEvent</code>, or <code>MouseEvent</code>.</li></ul></li><li><strong>event.detail.startY</strong>: <ul><li>Type: <code>number</code></li><li>The starting <code>pageY</code> value, only available when the <code>relatedEvent</code> is <code>PointerEvent</code>, <code>TouchEvent</code>, or <code>MouseEvent</code>.</li></ul></li><li><strong>event.detail.endX</strong>: <ul><li>Type: <code>number</code></li><li>The ending <code>pageX</code> value, only available when the <code>relatedEvent</code> is <code>PointerEvent</code>, <code>TouchEvent</code>, or <code>MouseEvent</code>.</li></ul></li><li><strong>event.detail.endY</strong>: <ul><li>Type: <code>number</code></li><li>The ending <code>pageY</code> value, only available when the <code>relatedEvent</code> is <code>PointerEvent</code>, <code>TouchEvent</code>, or <code>MouseEvent</code>.</li></ul></li></ul></li><li>Example:</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">canvas</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#canvas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">action</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="actionstart" tabindex="-1">actionstart <a class="header-anchor" href="#actionstart" aria-label="Permalink to &quot;actionstart&quot;">​</a></h3><p>The event is fired when a pointer becomes active.</p><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>true</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The related data of the action.</li></ul></li><li><strong>event.detail.action</strong>: <ul><li>Type: <code>string</code></li><li>Options: same as the <code>action</code> event.</li><li>The action type.</li></ul></li><li><strong>event.detail.relatedEvent</strong>: <ul><li>Type: <code>PointerEvent | TouchEvent | MouseEvent</code></li><li>The related native event that triggered this event.</li></ul></li></ul></li></ul><h3 id="actionmove" tabindex="-1">actionmove <a class="header-anchor" href="#actionmove" aria-label="Permalink to &quot;actionmove&quot;">​</a></h3><p>This event is fired when a pointer changes coordinates.</p><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>true</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The related data of the action.</li></ul></li><li><strong>event.detail.action</strong>: <ul><li>Type: <code>string</code></li><li>Options: same as the <code>action</code> event.</li><li>The action type.</li></ul></li><li><strong>event.detail.relatedEvent</strong>: <ul><li>Type: <code>PointerEvent | TouchEvent | MouseEvent</code></li><li>The related native event that triggered this event.</li></ul></li></ul></li></ul><h3 id="actionend" tabindex="-1">actionend <a class="header-anchor" href="#actionend" aria-label="Permalink to &quot;actionend&quot;">​</a></h3><p>This event is fired when a pointer is no longer active.</p><ul><li>Event: <ul><li><strong>event.bubbles</strong>: <code>true</code></li><li><strong>event.cancelable</strong>: <code>true</code></li><li><strong>event.composed</strong>: <code>true</code></li><li><strong>event.detail</strong>: <ul><li>Type: <code>Object</code></li><li>The related data of the action.</li></ul></li><li><strong>event.detail.action</strong>: <ul><li>Type: <code>string</code></li><li>Options: same as the <code>action</code> event.</li><li>The action type.</li></ul></li><li><strong>event.detail.relatedEvent</strong>: <ul><li>Type: <code>PointerEvent | TouchEvent | MouseEvent</code></li><li>The related native event that triggered this event.</li></ul></li></ul></li></ul><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><p>There is only one default slot in this element.</p><blockquote><p>You can disable it by setting the <code>slottable</code> property to <code>false</code>:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">slottable</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">cropper-canvas</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></blockquote>`,18);function q(P,x,k,w,S,I){const s=c("LiveDemo"),a=c("ClientOnly"),i=c("CropperCanvasToNativeCanvas");return p(),d("div",null,[h,l(a,null,{default:t(()=>[l(s,null,{default:t(()=>[y]),_:1})]),_:1}),D,F,l(a,null,{default:t(()=>[l(s,null,{default:t(()=>[v]),_:1})]),_:1}),g,l(a,null,{default:t(()=>[l(s,null,{default:t(()=>[m]),_:1})]),_:1}),b,C,l(a,null,{default:t(()=>[l(s,null,{default:t(()=>[_]),_:1})]),_:1}),T,e("ul",null,[f,e("li",null,[E,o(":"),l(a,null,{default:t(()=>[l(i)]),_:1})])]),A])}const N=r(u,[["render",q]]);export{V as __pageData,N as default};
